//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("AdventureWorks2008Model", "FK_BusinessEntityAddress_Address_AddressID", "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Adventures_First.Endereço), "BusinessEntityAddress", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Adventures_First.BusinessEntityAddress), true)]
[assembly: EdmRelationshipAttribute("AdventureWorks2008Model", "FK_BusinessEntityAddress_AddressType_AddressTypeID", "AddressType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Adventures_First.AddressType), "BusinessEntityAddress", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Adventures_First.BusinessEntityAddress), true)]
[assembly: EdmRelationshipAttribute("AdventureWorks2008Model", "FK_BusinessEntityAddress_BusinessEntity_BusinessEntityID", "BusinessEntity", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Adventures_First.BusinessEntity), "BusinessEntityAddress", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Adventures_First.BusinessEntityAddress), true)]
[assembly: EdmRelationshipAttribute("AdventureWorks2008Model", "FK_BusinessEntityContact_BusinessEntity_BusinessEntityID", "BusinessEntity", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Adventures_First.BusinessEntity), "BusinessEntityContact", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Adventures_First.BusinessEntityContact), true)]
[assembly: EdmRelationshipAttribute("AdventureWorks2008Model", "FK_Person_BusinessEntity_BusinessEntityID", "BusinessEntity", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Adventures_First.BusinessEntity), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Adventures_First.Person), true)]
[assembly: EdmRelationshipAttribute("AdventureWorks2008Model", "FK_BusinessEntityContact_ContactType_ContactTypeID", "ContactType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Adventures_First.ContactType), "BusinessEntityContact", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Adventures_First.BusinessEntityContact), true)]
[assembly: EdmRelationshipAttribute("AdventureWorks2008Model", "FK_BusinessEntityContact_Person_PersonID", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Adventures_First.Person), "BusinessEntityContact", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Adventures_First.BusinessEntityContact), true)]
[assembly: EdmRelationshipAttribute("AdventureWorks2008Model", "FK_EmailAddress_Person_BusinessEntityID", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Adventures_First.Person), "EmailAddress", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Adventures_First.EmailAddress), true)]
[assembly: EdmRelationshipAttribute("AdventureWorks2008Model", "FK_Password_Person_BusinessEntityID", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Adventures_First.Person), "Password", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Adventures_First.Password), true)]
[assembly: EdmRelationshipAttribute("AdventureWorks2008Model", "FK_PersonPhone_Person_BusinessEntityID", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Adventures_First.Person), "PersonPhone", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Adventures_First.PersonPhone), true)]
[assembly: EdmRelationshipAttribute("AdventureWorks2008Model", "FK_PersonPhone_PhoneNumberType_PhoneNumberTypeID", "PhoneNumberType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Adventures_First.PhoneNumberType), "PersonPhone", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Adventures_First.PersonPhone), true)]

#endregion

namespace Adventures_First
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class AdventureWorks2008Entities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new AdventureWorks2008Entities object using the connection string found in the 'AdventureWorks2008Entities' section of the application configuration file.
        /// </summary>
        public AdventureWorks2008Entities() : base("name=AdventureWorks2008Entities", "AdventureWorks2008Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AdventureWorks2008Entities object.
        /// </summary>
        public AdventureWorks2008Entities(string connectionString) : base(connectionString, "AdventureWorks2008Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AdventureWorks2008Entities object.
        /// </summary>
        public AdventureWorks2008Entities(EntityConnection connection) : base(connection, "AdventureWorks2008Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Endereço> Endereços
        {
            get
            {
                if ((_Endereços == null))
                {
                    _Endereços = base.CreateObjectSet<Endereço>("Endereços");
                }
                return _Endereços;
            }
        }
        private ObjectSet<Endereço> _Endereços;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AddressType> AddressTypes
        {
            get
            {
                if ((_AddressTypes == null))
                {
                    _AddressTypes = base.CreateObjectSet<AddressType>("AddressTypes");
                }
                return _AddressTypes;
            }
        }
        private ObjectSet<AddressType> _AddressTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BusinessEntity> BusinessEntities
        {
            get
            {
                if ((_BusinessEntities == null))
                {
                    _BusinessEntities = base.CreateObjectSet<BusinessEntity>("BusinessEntities");
                }
                return _BusinessEntities;
            }
        }
        private ObjectSet<BusinessEntity> _BusinessEntities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BusinessEntityAddress> BusinessEntityAddresses
        {
            get
            {
                if ((_BusinessEntityAddresses == null))
                {
                    _BusinessEntityAddresses = base.CreateObjectSet<BusinessEntityAddress>("BusinessEntityAddresses");
                }
                return _BusinessEntityAddresses;
            }
        }
        private ObjectSet<BusinessEntityAddress> _BusinessEntityAddresses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BusinessEntityContact> BusinessEntityContacts
        {
            get
            {
                if ((_BusinessEntityContacts == null))
                {
                    _BusinessEntityContacts = base.CreateObjectSet<BusinessEntityContact>("BusinessEntityContacts");
                }
                return _BusinessEntityContacts;
            }
        }
        private ObjectSet<BusinessEntityContact> _BusinessEntityContacts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContactType> ContactTypes
        {
            get
            {
                if ((_ContactTypes == null))
                {
                    _ContactTypes = base.CreateObjectSet<ContactType>("ContactTypes");
                }
                return _ContactTypes;
            }
        }
        private ObjectSet<ContactType> _ContactTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CountryRegion> CountryRegions
        {
            get
            {
                if ((_CountryRegions == null))
                {
                    _CountryRegions = base.CreateObjectSet<CountryRegion>("CountryRegions");
                }
                return _CountryRegions;
            }
        }
        private ObjectSet<CountryRegion> _CountryRegions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmailAddress> EmailAddresses
        {
            get
            {
                if ((_EmailAddresses == null))
                {
                    _EmailAddresses = base.CreateObjectSet<EmailAddress>("EmailAddresses");
                }
                return _EmailAddresses;
            }
        }
        private ObjectSet<EmailAddress> _EmailAddresses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Password> Passwords
        {
            get
            {
                if ((_Passwords == null))
                {
                    _Passwords = base.CreateObjectSet<Password>("Passwords");
                }
                return _Passwords;
            }
        }
        private ObjectSet<Password> _Passwords;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Person> People
        {
            get
            {
                if ((_People == null))
                {
                    _People = base.CreateObjectSet<Person>("People");
                }
                return _People;
            }
        }
        private ObjectSet<Person> _People;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PersonPhone> PersonPhones
        {
            get
            {
                if ((_PersonPhones == null))
                {
                    _PersonPhones = base.CreateObjectSet<PersonPhone>("PersonPhones");
                }
                return _PersonPhones;
            }
        }
        private ObjectSet<PersonPhone> _PersonPhones;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PhoneNumberType> PhoneNumberTypes
        {
            get
            {
                if ((_PhoneNumberTypes == null))
                {
                    _PhoneNumberTypes = base.CreateObjectSet<PhoneNumberType>("PhoneNumberTypes");
                }
                return _PhoneNumberTypes;
            }
        }
        private ObjectSet<PhoneNumberType> _PhoneNumberTypes;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Endereços EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEndereços(Endereço endereço)
        {
            base.AddObject("Endereços", endereço);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AddressTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAddressTypes(AddressType addressType)
        {
            base.AddObject("AddressTypes", addressType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BusinessEntities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBusinessEntities(BusinessEntity businessEntity)
        {
            base.AddObject("BusinessEntities", businessEntity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BusinessEntityAddresses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBusinessEntityAddresses(BusinessEntityAddress businessEntityAddress)
        {
            base.AddObject("BusinessEntityAddresses", businessEntityAddress);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BusinessEntityContacts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBusinessEntityContacts(BusinessEntityContact businessEntityContact)
        {
            base.AddObject("BusinessEntityContacts", businessEntityContact);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContactTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContactTypes(ContactType contactType)
        {
            base.AddObject("ContactTypes", contactType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CountryRegions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountryRegions(CountryRegion countryRegion)
        {
            base.AddObject("CountryRegions", countryRegion);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmailAddresses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmailAddresses(EmailAddress emailAddress)
        {
            base.AddObject("EmailAddresses", emailAddress);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Passwords EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPasswords(Password password)
        {
            base.AddObject("Passwords", password);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the People EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPeople(Person person)
        {
            base.AddObject("People", person);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PersonPhones EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPersonPhones(PersonPhone personPhone)
        {
            base.AddObject("PersonPhones", personPhone);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PhoneNumberTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPhoneNumberTypes(PhoneNumberType phoneNumberType)
        {
            base.AddObject("PhoneNumberTypes", phoneNumberType);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AdventureWorks2008Model", Name="AddressType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AddressType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AddressType object.
        /// </summary>
        /// <param name="addressTypeID">Initial value of the AddressTypeID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="rowguid">Initial value of the rowguid property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        public static AddressType CreateAddressType(global::System.Int32 addressTypeID, global::System.String name, global::System.Guid rowguid, global::System.DateTime modifiedDate)
        {
            AddressType addressType = new AddressType();
            addressType.AddressTypeID = addressTypeID;
            addressType.Name = name;
            addressType.rowguid = rowguid;
            addressType.ModifiedDate = modifiedDate;
            return addressType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AddressTypeID
        {
            get
            {
                return _AddressTypeID;
            }
            set
            {
                if (_AddressTypeID != value)
                {
                    OnAddressTypeIDChanging(value);
                    ReportPropertyChanging("AddressTypeID");
                    _AddressTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AddressTypeID");
                    OnAddressTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _AddressTypeID;
        partial void OnAddressTypeIDChanging(global::System.Int32 value);
        partial void OnAddressTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid rowguid
        {
            get
            {
                return _rowguid;
            }
            set
            {
                OnrowguidChanging(value);
                ReportPropertyChanging("rowguid");
                _rowguid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("rowguid");
                OnrowguidChanged();
            }
        }
        private global::System.Guid _rowguid;
        partial void OnrowguidChanging(global::System.Guid value);
        partial void OnrowguidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdventureWorks2008Model", "FK_BusinessEntityAddress_AddressType_AddressTypeID", "BusinessEntityAddress")]
        public EntityCollection<BusinessEntityAddress> BusinessEntityAddresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BusinessEntityAddress>("AdventureWorks2008Model.FK_BusinessEntityAddress_AddressType_AddressTypeID", "BusinessEntityAddress");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BusinessEntityAddress>("AdventureWorks2008Model.FK_BusinessEntityAddress_AddressType_AddressTypeID", "BusinessEntityAddress", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AdventureWorks2008Model", Name="BusinessEntity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BusinessEntity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BusinessEntity object.
        /// </summary>
        /// <param name="businessEntityID">Initial value of the BusinessEntityID property.</param>
        /// <param name="rowguid">Initial value of the rowguid property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        public static BusinessEntity CreateBusinessEntity(global::System.Int32 businessEntityID, global::System.Guid rowguid, global::System.DateTime modifiedDate)
        {
            BusinessEntity businessEntity = new BusinessEntity();
            businessEntity.BusinessEntityID = businessEntityID;
            businessEntity.rowguid = rowguid;
            businessEntity.ModifiedDate = modifiedDate;
            return businessEntity;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BusinessEntityID
        {
            get
            {
                return _BusinessEntityID;
            }
            set
            {
                if (_BusinessEntityID != value)
                {
                    OnBusinessEntityIDChanging(value);
                    ReportPropertyChanging("BusinessEntityID");
                    _BusinessEntityID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BusinessEntityID");
                    OnBusinessEntityIDChanged();
                }
            }
        }
        private global::System.Int32 _BusinessEntityID;
        partial void OnBusinessEntityIDChanging(global::System.Int32 value);
        partial void OnBusinessEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid rowguid
        {
            get
            {
                return _rowguid;
            }
            set
            {
                OnrowguidChanging(value);
                ReportPropertyChanging("rowguid");
                _rowguid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("rowguid");
                OnrowguidChanged();
            }
        }
        private global::System.Guid _rowguid;
        partial void OnrowguidChanging(global::System.Guid value);
        partial void OnrowguidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdventureWorks2008Model", "FK_BusinessEntityAddress_BusinessEntity_BusinessEntityID", "BusinessEntityAddress")]
        public EntityCollection<BusinessEntityAddress> BusinessEntityAddresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BusinessEntityAddress>("AdventureWorks2008Model.FK_BusinessEntityAddress_BusinessEntity_BusinessEntityID", "BusinessEntityAddress");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BusinessEntityAddress>("AdventureWorks2008Model.FK_BusinessEntityAddress_BusinessEntity_BusinessEntityID", "BusinessEntityAddress", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdventureWorks2008Model", "FK_BusinessEntityContact_BusinessEntity_BusinessEntityID", "BusinessEntityContact")]
        public EntityCollection<BusinessEntityContact> BusinessEntityContacts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BusinessEntityContact>("AdventureWorks2008Model.FK_BusinessEntityContact_BusinessEntity_BusinessEntityID", "BusinessEntityContact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BusinessEntityContact>("AdventureWorks2008Model.FK_BusinessEntityContact_BusinessEntity_BusinessEntityID", "BusinessEntityContact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdventureWorks2008Model", "FK_Person_BusinessEntity_BusinessEntityID", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("AdventureWorks2008Model.FK_Person_BusinessEntity_BusinessEntityID", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("AdventureWorks2008Model.FK_Person_BusinessEntity_BusinessEntityID", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("AdventureWorks2008Model.FK_Person_BusinessEntity_BusinessEntityID", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("AdventureWorks2008Model.FK_Person_BusinessEntity_BusinessEntityID", "Person", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AdventureWorks2008Model", Name="BusinessEntityAddress")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BusinessEntityAddress : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BusinessEntityAddress object.
        /// </summary>
        /// <param name="businessEntityID">Initial value of the BusinessEntityID property.</param>
        /// <param name="addressID">Initial value of the AddressID property.</param>
        /// <param name="addressTypeID">Initial value of the AddressTypeID property.</param>
        /// <param name="rowguid">Initial value of the rowguid property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        public static BusinessEntityAddress CreateBusinessEntityAddress(global::System.Int32 businessEntityID, global::System.Int32 addressID, global::System.Int32 addressTypeID, global::System.Guid rowguid, global::System.DateTime modifiedDate)
        {
            BusinessEntityAddress businessEntityAddress = new BusinessEntityAddress();
            businessEntityAddress.BusinessEntityID = businessEntityID;
            businessEntityAddress.AddressID = addressID;
            businessEntityAddress.AddressTypeID = addressTypeID;
            businessEntityAddress.rowguid = rowguid;
            businessEntityAddress.ModifiedDate = modifiedDate;
            return businessEntityAddress;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BusinessEntityID
        {
            get
            {
                return _BusinessEntityID;
            }
            set
            {
                if (_BusinessEntityID != value)
                {
                    OnBusinessEntityIDChanging(value);
                    ReportPropertyChanging("BusinessEntityID");
                    _BusinessEntityID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BusinessEntityID");
                    OnBusinessEntityIDChanged();
                }
            }
        }
        private global::System.Int32 _BusinessEntityID;
        partial void OnBusinessEntityIDChanging(global::System.Int32 value);
        partial void OnBusinessEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AddressID
        {
            get
            {
                return _AddressID;
            }
            set
            {
                if (_AddressID != value)
                {
                    OnAddressIDChanging(value);
                    ReportPropertyChanging("AddressID");
                    _AddressID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AddressID");
                    OnAddressIDChanged();
                }
            }
        }
        private global::System.Int32 _AddressID;
        partial void OnAddressIDChanging(global::System.Int32 value);
        partial void OnAddressIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AddressTypeID
        {
            get
            {
                return _AddressTypeID;
            }
            set
            {
                if (_AddressTypeID != value)
                {
                    OnAddressTypeIDChanging(value);
                    ReportPropertyChanging("AddressTypeID");
                    _AddressTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AddressTypeID");
                    OnAddressTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _AddressTypeID;
        partial void OnAddressTypeIDChanging(global::System.Int32 value);
        partial void OnAddressTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid rowguid
        {
            get
            {
                return _rowguid;
            }
            set
            {
                OnrowguidChanging(value);
                ReportPropertyChanging("rowguid");
                _rowguid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("rowguid");
                OnrowguidChanged();
            }
        }
        private global::System.Guid _rowguid;
        partial void OnrowguidChanging(global::System.Guid value);
        partial void OnrowguidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdventureWorks2008Model", "FK_BusinessEntityAddress_Address_AddressID", "Address")]
        public Endereço Address
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Endereço>("AdventureWorks2008Model.FK_BusinessEntityAddress_Address_AddressID", "Address").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Endereço>("AdventureWorks2008Model.FK_BusinessEntityAddress_Address_AddressID", "Address").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Endereço> AddressReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Endereço>("AdventureWorks2008Model.FK_BusinessEntityAddress_Address_AddressID", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Endereço>("AdventureWorks2008Model.FK_BusinessEntityAddress_Address_AddressID", "Address", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdventureWorks2008Model", "FK_BusinessEntityAddress_AddressType_AddressTypeID", "AddressType")]
        public AddressType AddressType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AddressType>("AdventureWorks2008Model.FK_BusinessEntityAddress_AddressType_AddressTypeID", "AddressType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AddressType>("AdventureWorks2008Model.FK_BusinessEntityAddress_AddressType_AddressTypeID", "AddressType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AddressType> AddressTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AddressType>("AdventureWorks2008Model.FK_BusinessEntityAddress_AddressType_AddressTypeID", "AddressType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AddressType>("AdventureWorks2008Model.FK_BusinessEntityAddress_AddressType_AddressTypeID", "AddressType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdventureWorks2008Model", "FK_BusinessEntityAddress_BusinessEntity_BusinessEntityID", "BusinessEntity")]
        public BusinessEntity BusinessEntity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessEntity>("AdventureWorks2008Model.FK_BusinessEntityAddress_BusinessEntity_BusinessEntityID", "BusinessEntity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessEntity>("AdventureWorks2008Model.FK_BusinessEntityAddress_BusinessEntity_BusinessEntityID", "BusinessEntity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BusinessEntity> BusinessEntityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessEntity>("AdventureWorks2008Model.FK_BusinessEntityAddress_BusinessEntity_BusinessEntityID", "BusinessEntity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BusinessEntity>("AdventureWorks2008Model.FK_BusinessEntityAddress_BusinessEntity_BusinessEntityID", "BusinessEntity", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AdventureWorks2008Model", Name="BusinessEntityContact")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BusinessEntityContact : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BusinessEntityContact object.
        /// </summary>
        /// <param name="businessEntityID">Initial value of the BusinessEntityID property.</param>
        /// <param name="personID">Initial value of the PersonID property.</param>
        /// <param name="contactTypeID">Initial value of the ContactTypeID property.</param>
        /// <param name="rowguid">Initial value of the rowguid property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        public static BusinessEntityContact CreateBusinessEntityContact(global::System.Int32 businessEntityID, global::System.Int32 personID, global::System.Int32 contactTypeID, global::System.Guid rowguid, global::System.DateTime modifiedDate)
        {
            BusinessEntityContact businessEntityContact = new BusinessEntityContact();
            businessEntityContact.BusinessEntityID = businessEntityID;
            businessEntityContact.PersonID = personID;
            businessEntityContact.ContactTypeID = contactTypeID;
            businessEntityContact.rowguid = rowguid;
            businessEntityContact.ModifiedDate = modifiedDate;
            return businessEntityContact;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BusinessEntityID
        {
            get
            {
                return _BusinessEntityID;
            }
            set
            {
                if (_BusinessEntityID != value)
                {
                    OnBusinessEntityIDChanging(value);
                    ReportPropertyChanging("BusinessEntityID");
                    _BusinessEntityID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BusinessEntityID");
                    OnBusinessEntityIDChanged();
                }
            }
        }
        private global::System.Int32 _BusinessEntityID;
        partial void OnBusinessEntityIDChanging(global::System.Int32 value);
        partial void OnBusinessEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                if (_PersonID != value)
                {
                    OnPersonIDChanging(value);
                    ReportPropertyChanging("PersonID");
                    _PersonID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PersonID");
                    OnPersonIDChanged();
                }
            }
        }
        private global::System.Int32 _PersonID;
        partial void OnPersonIDChanging(global::System.Int32 value);
        partial void OnPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContactTypeID
        {
            get
            {
                return _ContactTypeID;
            }
            set
            {
                if (_ContactTypeID != value)
                {
                    OnContactTypeIDChanging(value);
                    ReportPropertyChanging("ContactTypeID");
                    _ContactTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ContactTypeID");
                    OnContactTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _ContactTypeID;
        partial void OnContactTypeIDChanging(global::System.Int32 value);
        partial void OnContactTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid rowguid
        {
            get
            {
                return _rowguid;
            }
            set
            {
                OnrowguidChanging(value);
                ReportPropertyChanging("rowguid");
                _rowguid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("rowguid");
                OnrowguidChanged();
            }
        }
        private global::System.Guid _rowguid;
        partial void OnrowguidChanging(global::System.Guid value);
        partial void OnrowguidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdventureWorks2008Model", "FK_BusinessEntityContact_BusinessEntity_BusinessEntityID", "BusinessEntity")]
        public BusinessEntity BusinessEntity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessEntity>("AdventureWorks2008Model.FK_BusinessEntityContact_BusinessEntity_BusinessEntityID", "BusinessEntity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessEntity>("AdventureWorks2008Model.FK_BusinessEntityContact_BusinessEntity_BusinessEntityID", "BusinessEntity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BusinessEntity> BusinessEntityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessEntity>("AdventureWorks2008Model.FK_BusinessEntityContact_BusinessEntity_BusinessEntityID", "BusinessEntity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BusinessEntity>("AdventureWorks2008Model.FK_BusinessEntityContact_BusinessEntity_BusinessEntityID", "BusinessEntity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdventureWorks2008Model", "FK_BusinessEntityContact_ContactType_ContactTypeID", "ContactType")]
        public ContactType ContactType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContactType>("AdventureWorks2008Model.FK_BusinessEntityContact_ContactType_ContactTypeID", "ContactType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContactType>("AdventureWorks2008Model.FK_BusinessEntityContact_ContactType_ContactTypeID", "ContactType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ContactType> ContactTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContactType>("AdventureWorks2008Model.FK_BusinessEntityContact_ContactType_ContactTypeID", "ContactType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ContactType>("AdventureWorks2008Model.FK_BusinessEntityContact_ContactType_ContactTypeID", "ContactType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdventureWorks2008Model", "FK_BusinessEntityContact_Person_PersonID", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("AdventureWorks2008Model.FK_BusinessEntityContact_Person_PersonID", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("AdventureWorks2008Model.FK_BusinessEntityContact_Person_PersonID", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("AdventureWorks2008Model.FK_BusinessEntityContact_Person_PersonID", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("AdventureWorks2008Model.FK_BusinessEntityContact_Person_PersonID", "Person", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AdventureWorks2008Model", Name="ContactType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContactType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContactType object.
        /// </summary>
        /// <param name="contactTypeID">Initial value of the ContactTypeID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        public static ContactType CreateContactType(global::System.Int32 contactTypeID, global::System.String name, global::System.DateTime modifiedDate)
        {
            ContactType contactType = new ContactType();
            contactType.ContactTypeID = contactTypeID;
            contactType.Name = name;
            contactType.ModifiedDate = modifiedDate;
            return contactType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContactTypeID
        {
            get
            {
                return _ContactTypeID;
            }
            set
            {
                if (_ContactTypeID != value)
                {
                    OnContactTypeIDChanging(value);
                    ReportPropertyChanging("ContactTypeID");
                    _ContactTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ContactTypeID");
                    OnContactTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _ContactTypeID;
        partial void OnContactTypeIDChanging(global::System.Int32 value);
        partial void OnContactTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdventureWorks2008Model", "FK_BusinessEntityContact_ContactType_ContactTypeID", "BusinessEntityContact")]
        public EntityCollection<BusinessEntityContact> BusinessEntityContacts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BusinessEntityContact>("AdventureWorks2008Model.FK_BusinessEntityContact_ContactType_ContactTypeID", "BusinessEntityContact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BusinessEntityContact>("AdventureWorks2008Model.FK_BusinessEntityContact_ContactType_ContactTypeID", "BusinessEntityContact", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AdventureWorks2008Model", Name="CountryRegion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CountryRegion : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CountryRegion object.
        /// </summary>
        /// <param name="countryRegionCode">Initial value of the CountryRegionCode property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        public static CountryRegion CreateCountryRegion(global::System.String countryRegionCode, global::System.String name, global::System.DateTime modifiedDate)
        {
            CountryRegion countryRegion = new CountryRegion();
            countryRegion.CountryRegionCode = countryRegionCode;
            countryRegion.Name = name;
            countryRegion.ModifiedDate = modifiedDate;
            return countryRegion;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CountryRegionCode
        {
            get
            {
                return _CountryRegionCode;
            }
            set
            {
                if (_CountryRegionCode != value)
                {
                    OnCountryRegionCodeChanging(value);
                    ReportPropertyChanging("CountryRegionCode");
                    _CountryRegionCode = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CountryRegionCode");
                    OnCountryRegionCodeChanged();
                }
            }
        }
        private global::System.String _CountryRegionCode;
        partial void OnCountryRegionCodeChanging(global::System.String value);
        partial void OnCountryRegionCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AdventureWorks2008Model", Name="EmailAddress")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmailAddress : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmailAddress object.
        /// </summary>
        /// <param name="businessEntityID">Initial value of the BusinessEntityID property.</param>
        /// <param name="emailAddressID">Initial value of the EmailAddressID property.</param>
        /// <param name="rowguid">Initial value of the rowguid property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        public static EmailAddress CreateEmailAddress(global::System.Int32 businessEntityID, global::System.Int32 emailAddressID, global::System.Guid rowguid, global::System.DateTime modifiedDate)
        {
            EmailAddress emailAddress = new EmailAddress();
            emailAddress.BusinessEntityID = businessEntityID;
            emailAddress.EmailAddressID = emailAddressID;
            emailAddress.rowguid = rowguid;
            emailAddress.ModifiedDate = modifiedDate;
            return emailAddress;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BusinessEntityID
        {
            get
            {
                return _BusinessEntityID;
            }
            set
            {
                if (_BusinessEntityID != value)
                {
                    OnBusinessEntityIDChanging(value);
                    ReportPropertyChanging("BusinessEntityID");
                    _BusinessEntityID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BusinessEntityID");
                    OnBusinessEntityIDChanged();
                }
            }
        }
        private global::System.Int32 _BusinessEntityID;
        partial void OnBusinessEntityIDChanging(global::System.Int32 value);
        partial void OnBusinessEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmailAddressID
        {
            get
            {
                return _EmailAddressID;
            }
            set
            {
                if (_EmailAddressID != value)
                {
                    OnEmailAddressIDChanging(value);
                    ReportPropertyChanging("EmailAddressID");
                    _EmailAddressID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EmailAddressID");
                    OnEmailAddressIDChanged();
                }
            }
        }
        private global::System.Int32 _EmailAddressID;
        partial void OnEmailAddressIDChanging(global::System.Int32 value);
        partial void OnEmailAddressIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmailAddress1
        {
            get
            {
                return _EmailAddress1;
            }
            set
            {
                OnEmailAddress1Changing(value);
                ReportPropertyChanging("EmailAddress1");
                _EmailAddress1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmailAddress1");
                OnEmailAddress1Changed();
            }
        }
        private global::System.String _EmailAddress1;
        partial void OnEmailAddress1Changing(global::System.String value);
        partial void OnEmailAddress1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid rowguid
        {
            get
            {
                return _rowguid;
            }
            set
            {
                OnrowguidChanging(value);
                ReportPropertyChanging("rowguid");
                _rowguid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("rowguid");
                OnrowguidChanged();
            }
        }
        private global::System.Guid _rowguid;
        partial void OnrowguidChanging(global::System.Guid value);
        partial void OnrowguidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdventureWorks2008Model", "FK_EmailAddress_Person_BusinessEntityID", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("AdventureWorks2008Model.FK_EmailAddress_Person_BusinessEntityID", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("AdventureWorks2008Model.FK_EmailAddress_Person_BusinessEntityID", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("AdventureWorks2008Model.FK_EmailAddress_Person_BusinessEntityID", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("AdventureWorks2008Model.FK_EmailAddress_Person_BusinessEntityID", "Person", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AdventureWorks2008Model", Name="Endereço")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Endereço : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Endereço object.
        /// </summary>
        /// <param name="addressID">Initial value of the AddressID property.</param>
        /// <param name="addressLine1">Initial value of the AddressLine1 property.</param>
        /// <param name="city">Initial value of the City property.</param>
        /// <param name="stateProvinceID">Initial value of the StateProvinceID property.</param>
        /// <param name="postalCode">Initial value of the PostalCode property.</param>
        /// <param name="rowguid">Initial value of the rowguid property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        public static Endereço CreateEndereço(global::System.Int32 addressID, global::System.String addressLine1, global::System.String city, global::System.Int32 stateProvinceID, global::System.String postalCode, global::System.Guid rowguid, global::System.DateTime modifiedDate)
        {
            Endereço endereço = new Endereço();
            endereço.AddressID = addressID;
            endereço.AddressLine1 = addressLine1;
            endereço.City = city;
            endereço.StateProvinceID = stateProvinceID;
            endereço.PostalCode = postalCode;
            endereço.rowguid = rowguid;
            endereço.ModifiedDate = modifiedDate;
            return endereço;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AddressID
        {
            get
            {
                return _AddressID;
            }
            set
            {
                if (_AddressID != value)
                {
                    OnAddressIDChanging(value);
                    ReportPropertyChanging("AddressID");
                    _AddressID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AddressID");
                    OnAddressIDChanged();
                }
            }
        }
        private global::System.Int32 _AddressID;
        partial void OnAddressIDChanging(global::System.Int32 value);
        partial void OnAddressIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AddressLine1
        {
            get
            {
                return _AddressLine1;
            }
            set
            {
                OnAddressLine1Changing(value);
                ReportPropertyChanging("AddressLine1");
                _AddressLine1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AddressLine1");
                OnAddressLine1Changed();
            }
        }
        private global::System.String _AddressLine1;
        partial void OnAddressLine1Changing(global::System.String value);
        partial void OnAddressLine1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressLine2
        {
            get
            {
                return _AddressLine2;
            }
            set
            {
                OnAddressLine2Changing(value);
                ReportPropertyChanging("AddressLine2");
                _AddressLine2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddressLine2");
                OnAddressLine2Changed();
            }
        }
        private global::System.String _AddressLine2;
        partial void OnAddressLine2Changing(global::System.String value);
        partial void OnAddressLine2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StateProvinceID
        {
            get
            {
                return _StateProvinceID;
            }
            set
            {
                OnStateProvinceIDChanging(value);
                ReportPropertyChanging("StateProvinceID");
                _StateProvinceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StateProvinceID");
                OnStateProvinceIDChanged();
            }
        }
        private global::System.Int32 _StateProvinceID;
        partial void OnStateProvinceIDChanging(global::System.Int32 value);
        partial void OnStateProvinceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PostalCode
        {
            get
            {
                return _PostalCode;
            }
            set
            {
                OnPostalCodeChanging(value);
                ReportPropertyChanging("PostalCode");
                _PostalCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PostalCode");
                OnPostalCodeChanged();
            }
        }
        private global::System.String _PostalCode;
        partial void OnPostalCodeChanging(global::System.String value);
        partial void OnPostalCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid rowguid
        {
            get
            {
                return _rowguid;
            }
            set
            {
                OnrowguidChanging(value);
                ReportPropertyChanging("rowguid");
                _rowguid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("rowguid");
                OnrowguidChanged();
            }
        }
        private global::System.Guid _rowguid;
        partial void OnrowguidChanging(global::System.Guid value);
        partial void OnrowguidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdventureWorks2008Model", "FK_BusinessEntityAddress_Address_AddressID", "BusinessEntityAddress")]
        public EntityCollection<BusinessEntityAddress> BusinessEntityAddresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BusinessEntityAddress>("AdventureWorks2008Model.FK_BusinessEntityAddress_Address_AddressID", "BusinessEntityAddress");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BusinessEntityAddress>("AdventureWorks2008Model.FK_BusinessEntityAddress_Address_AddressID", "BusinessEntityAddress", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AdventureWorks2008Model", Name="Password")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Password : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Password object.
        /// </summary>
        /// <param name="businessEntityID">Initial value of the BusinessEntityID property.</param>
        /// <param name="passwordHash">Initial value of the PasswordHash property.</param>
        /// <param name="passwordSalt">Initial value of the PasswordSalt property.</param>
        /// <param name="rowguid">Initial value of the rowguid property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        public static Password CreatePassword(global::System.Int32 businessEntityID, global::System.String passwordHash, global::System.String passwordSalt, global::System.Guid rowguid, global::System.DateTime modifiedDate)
        {
            Password password = new Password();
            password.BusinessEntityID = businessEntityID;
            password.PasswordHash = passwordHash;
            password.PasswordSalt = passwordSalt;
            password.rowguid = rowguid;
            password.ModifiedDate = modifiedDate;
            return password;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BusinessEntityID
        {
            get
            {
                return _BusinessEntityID;
            }
            set
            {
                if (_BusinessEntityID != value)
                {
                    OnBusinessEntityIDChanging(value);
                    ReportPropertyChanging("BusinessEntityID");
                    _BusinessEntityID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BusinessEntityID");
                    OnBusinessEntityIDChanged();
                }
            }
        }
        private global::System.Int32 _BusinessEntityID;
        partial void OnBusinessEntityIDChanging(global::System.Int32 value);
        partial void OnBusinessEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PasswordHash
        {
            get
            {
                return _PasswordHash;
            }
            set
            {
                OnPasswordHashChanging(value);
                ReportPropertyChanging("PasswordHash");
                _PasswordHash = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PasswordHash");
                OnPasswordHashChanged();
            }
        }
        private global::System.String _PasswordHash;
        partial void OnPasswordHashChanging(global::System.String value);
        partial void OnPasswordHashChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PasswordSalt
        {
            get
            {
                return _PasswordSalt;
            }
            set
            {
                OnPasswordSaltChanging(value);
                ReportPropertyChanging("PasswordSalt");
                _PasswordSalt = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PasswordSalt");
                OnPasswordSaltChanged();
            }
        }
        private global::System.String _PasswordSalt;
        partial void OnPasswordSaltChanging(global::System.String value);
        partial void OnPasswordSaltChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid rowguid
        {
            get
            {
                return _rowguid;
            }
            set
            {
                OnrowguidChanging(value);
                ReportPropertyChanging("rowguid");
                _rowguid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("rowguid");
                OnrowguidChanged();
            }
        }
        private global::System.Guid _rowguid;
        partial void OnrowguidChanging(global::System.Guid value);
        partial void OnrowguidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdventureWorks2008Model", "FK_Password_Person_BusinessEntityID", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("AdventureWorks2008Model.FK_Password_Person_BusinessEntityID", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("AdventureWorks2008Model.FK_Password_Person_BusinessEntityID", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("AdventureWorks2008Model.FK_Password_Person_BusinessEntityID", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("AdventureWorks2008Model.FK_Password_Person_BusinessEntityID", "Person", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AdventureWorks2008Model", Name="Person")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Person : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Person object.
        /// </summary>
        /// <param name="businessEntityID">Initial value of the BusinessEntityID property.</param>
        /// <param name="personType">Initial value of the PersonType property.</param>
        /// <param name="nameStyle">Initial value of the NameStyle property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="emailPromotion">Initial value of the EmailPromotion property.</param>
        /// <param name="rowguid">Initial value of the rowguid property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        public static Person CreatePerson(global::System.Int32 businessEntityID, global::System.String personType, global::System.Boolean nameStyle, global::System.String firstName, global::System.String lastName, global::System.Int32 emailPromotion, global::System.Guid rowguid, global::System.DateTime modifiedDate)
        {
            Person person = new Person();
            person.BusinessEntityID = businessEntityID;
            person.PersonType = personType;
            person.NameStyle = nameStyle;
            person.FirstName = firstName;
            person.LastName = lastName;
            person.EmailPromotion = emailPromotion;
            person.rowguid = rowguid;
            person.ModifiedDate = modifiedDate;
            return person;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BusinessEntityID
        {
            get
            {
                return _BusinessEntityID;
            }
            set
            {
                if (_BusinessEntityID != value)
                {
                    OnBusinessEntityIDChanging(value);
                    ReportPropertyChanging("BusinessEntityID");
                    _BusinessEntityID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BusinessEntityID");
                    OnBusinessEntityIDChanged();
                }
            }
        }
        private global::System.Int32 _BusinessEntityID;
        partial void OnBusinessEntityIDChanging(global::System.Int32 value);
        partial void OnBusinessEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PersonType
        {
            get
            {
                return _PersonType;
            }
            set
            {
                OnPersonTypeChanging(value);
                ReportPropertyChanging("PersonType");
                _PersonType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PersonType");
                OnPersonTypeChanged();
            }
        }
        private global::System.String _PersonType;
        partial void OnPersonTypeChanging(global::System.String value);
        partial void OnPersonTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean NameStyle
        {
            get
            {
                return _NameStyle;
            }
            set
            {
                OnNameStyleChanging(value);
                ReportPropertyChanging("NameStyle");
                _NameStyle = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NameStyle");
                OnNameStyleChanged();
            }
        }
        private global::System.Boolean _NameStyle;
        partial void OnNameStyleChanging(global::System.Boolean value);
        partial void OnNameStyleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MiddleName
        {
            get
            {
                return _MiddleName;
            }
            set
            {
                OnMiddleNameChanging(value);
                ReportPropertyChanging("MiddleName");
                _MiddleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MiddleName");
                OnMiddleNameChanged();
            }
        }
        private global::System.String _MiddleName;
        partial void OnMiddleNameChanging(global::System.String value);
        partial void OnMiddleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suffix
        {
            get
            {
                return _Suffix;
            }
            set
            {
                OnSuffixChanging(value);
                ReportPropertyChanging("Suffix");
                _Suffix = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suffix");
                OnSuffixChanged();
            }
        }
        private global::System.String _Suffix;
        partial void OnSuffixChanging(global::System.String value);
        partial void OnSuffixChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmailPromotion
        {
            get
            {
                return _EmailPromotion;
            }
            set
            {
                OnEmailPromotionChanging(value);
                ReportPropertyChanging("EmailPromotion");
                _EmailPromotion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmailPromotion");
                OnEmailPromotionChanged();
            }
        }
        private global::System.Int32 _EmailPromotion;
        partial void OnEmailPromotionChanging(global::System.Int32 value);
        partial void OnEmailPromotionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AdditionalContactInfo
        {
            get
            {
                return _AdditionalContactInfo;
            }
            set
            {
                OnAdditionalContactInfoChanging(value);
                ReportPropertyChanging("AdditionalContactInfo");
                _AdditionalContactInfo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AdditionalContactInfo");
                OnAdditionalContactInfoChanged();
            }
        }
        private global::System.String _AdditionalContactInfo;
        partial void OnAdditionalContactInfoChanging(global::System.String value);
        partial void OnAdditionalContactInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Demographics
        {
            get
            {
                return _Demographics;
            }
            set
            {
                OnDemographicsChanging(value);
                ReportPropertyChanging("Demographics");
                _Demographics = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Demographics");
                OnDemographicsChanged();
            }
        }
        private global::System.String _Demographics;
        partial void OnDemographicsChanging(global::System.String value);
        partial void OnDemographicsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid rowguid
        {
            get
            {
                return _rowguid;
            }
            set
            {
                OnrowguidChanging(value);
                ReportPropertyChanging("rowguid");
                _rowguid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("rowguid");
                OnrowguidChanged();
            }
        }
        private global::System.Guid _rowguid;
        partial void OnrowguidChanging(global::System.Guid value);
        partial void OnrowguidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdventureWorks2008Model", "FK_Person_BusinessEntity_BusinessEntityID", "BusinessEntity")]
        public BusinessEntity BusinessEntity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessEntity>("AdventureWorks2008Model.FK_Person_BusinessEntity_BusinessEntityID", "BusinessEntity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessEntity>("AdventureWorks2008Model.FK_Person_BusinessEntity_BusinessEntityID", "BusinessEntity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BusinessEntity> BusinessEntityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessEntity>("AdventureWorks2008Model.FK_Person_BusinessEntity_BusinessEntityID", "BusinessEntity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BusinessEntity>("AdventureWorks2008Model.FK_Person_BusinessEntity_BusinessEntityID", "BusinessEntity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdventureWorks2008Model", "FK_BusinessEntityContact_Person_PersonID", "BusinessEntityContact")]
        public EntityCollection<BusinessEntityContact> BusinessEntityContacts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BusinessEntityContact>("AdventureWorks2008Model.FK_BusinessEntityContact_Person_PersonID", "BusinessEntityContact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BusinessEntityContact>("AdventureWorks2008Model.FK_BusinessEntityContact_Person_PersonID", "BusinessEntityContact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdventureWorks2008Model", "FK_EmailAddress_Person_BusinessEntityID", "EmailAddress")]
        public EntityCollection<EmailAddress> EmailAddresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmailAddress>("AdventureWorks2008Model.FK_EmailAddress_Person_BusinessEntityID", "EmailAddress");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmailAddress>("AdventureWorks2008Model.FK_EmailAddress_Person_BusinessEntityID", "EmailAddress", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdventureWorks2008Model", "FK_Password_Person_BusinessEntityID", "Password")]
        public Password Password
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Password>("AdventureWorks2008Model.FK_Password_Person_BusinessEntityID", "Password").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Password>("AdventureWorks2008Model.FK_Password_Person_BusinessEntityID", "Password").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Password> PasswordReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Password>("AdventureWorks2008Model.FK_Password_Person_BusinessEntityID", "Password");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Password>("AdventureWorks2008Model.FK_Password_Person_BusinessEntityID", "Password", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdventureWorks2008Model", "FK_PersonPhone_Person_BusinessEntityID", "PersonPhone")]
        public EntityCollection<PersonPhone> PersonPhones
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonPhone>("AdventureWorks2008Model.FK_PersonPhone_Person_BusinessEntityID", "PersonPhone");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonPhone>("AdventureWorks2008Model.FK_PersonPhone_Person_BusinessEntityID", "PersonPhone", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AdventureWorks2008Model", Name="PersonPhone")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PersonPhone : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PersonPhone object.
        /// </summary>
        /// <param name="businessEntityID">Initial value of the BusinessEntityID property.</param>
        /// <param name="phoneNumber">Initial value of the PhoneNumber property.</param>
        /// <param name="phoneNumberTypeID">Initial value of the PhoneNumberTypeID property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        public static PersonPhone CreatePersonPhone(global::System.Int32 businessEntityID, global::System.String phoneNumber, global::System.Int32 phoneNumberTypeID, global::System.DateTime modifiedDate)
        {
            PersonPhone personPhone = new PersonPhone();
            personPhone.BusinessEntityID = businessEntityID;
            personPhone.PhoneNumber = phoneNumber;
            personPhone.PhoneNumberTypeID = phoneNumberTypeID;
            personPhone.ModifiedDate = modifiedDate;
            return personPhone;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BusinessEntityID
        {
            get
            {
                return _BusinessEntityID;
            }
            set
            {
                if (_BusinessEntityID != value)
                {
                    OnBusinessEntityIDChanging(value);
                    ReportPropertyChanging("BusinessEntityID");
                    _BusinessEntityID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BusinessEntityID");
                    OnBusinessEntityIDChanged();
                }
            }
        }
        private global::System.Int32 _BusinessEntityID;
        partial void OnBusinessEntityIDChanging(global::System.Int32 value);
        partial void OnBusinessEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                if (_PhoneNumber != value)
                {
                    OnPhoneNumberChanging(value);
                    ReportPropertyChanging("PhoneNumber");
                    _PhoneNumber = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PhoneNumber");
                    OnPhoneNumberChanged();
                }
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PhoneNumberTypeID
        {
            get
            {
                return _PhoneNumberTypeID;
            }
            set
            {
                if (_PhoneNumberTypeID != value)
                {
                    OnPhoneNumberTypeIDChanging(value);
                    ReportPropertyChanging("PhoneNumberTypeID");
                    _PhoneNumberTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PhoneNumberTypeID");
                    OnPhoneNumberTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _PhoneNumberTypeID;
        partial void OnPhoneNumberTypeIDChanging(global::System.Int32 value);
        partial void OnPhoneNumberTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdventureWorks2008Model", "FK_PersonPhone_Person_BusinessEntityID", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("AdventureWorks2008Model.FK_PersonPhone_Person_BusinessEntityID", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("AdventureWorks2008Model.FK_PersonPhone_Person_BusinessEntityID", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("AdventureWorks2008Model.FK_PersonPhone_Person_BusinessEntityID", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("AdventureWorks2008Model.FK_PersonPhone_Person_BusinessEntityID", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdventureWorks2008Model", "FK_PersonPhone_PhoneNumberType_PhoneNumberTypeID", "PhoneNumberType")]
        public PhoneNumberType PhoneNumberType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhoneNumberType>("AdventureWorks2008Model.FK_PersonPhone_PhoneNumberType_PhoneNumberTypeID", "PhoneNumberType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhoneNumberType>("AdventureWorks2008Model.FK_PersonPhone_PhoneNumberType_PhoneNumberTypeID", "PhoneNumberType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PhoneNumberType> PhoneNumberTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhoneNumberType>("AdventureWorks2008Model.FK_PersonPhone_PhoneNumberType_PhoneNumberTypeID", "PhoneNumberType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PhoneNumberType>("AdventureWorks2008Model.FK_PersonPhone_PhoneNumberType_PhoneNumberTypeID", "PhoneNumberType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AdventureWorks2008Model", Name="PhoneNumberType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PhoneNumberType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PhoneNumberType object.
        /// </summary>
        /// <param name="phoneNumberTypeID">Initial value of the PhoneNumberTypeID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        public static PhoneNumberType CreatePhoneNumberType(global::System.Int32 phoneNumberTypeID, global::System.String name, global::System.DateTime modifiedDate)
        {
            PhoneNumberType phoneNumberType = new PhoneNumberType();
            phoneNumberType.PhoneNumberTypeID = phoneNumberTypeID;
            phoneNumberType.Name = name;
            phoneNumberType.ModifiedDate = modifiedDate;
            return phoneNumberType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PhoneNumberTypeID
        {
            get
            {
                return _PhoneNumberTypeID;
            }
            set
            {
                if (_PhoneNumberTypeID != value)
                {
                    OnPhoneNumberTypeIDChanging(value);
                    ReportPropertyChanging("PhoneNumberTypeID");
                    _PhoneNumberTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PhoneNumberTypeID");
                    OnPhoneNumberTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _PhoneNumberTypeID;
        partial void OnPhoneNumberTypeIDChanging(global::System.Int32 value);
        partial void OnPhoneNumberTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdventureWorks2008Model", "FK_PersonPhone_PhoneNumberType_PhoneNumberTypeID", "PersonPhone")]
        public EntityCollection<PersonPhone> PersonPhones
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonPhone>("AdventureWorks2008Model.FK_PersonPhone_PhoneNumberType_PhoneNumberTypeID", "PersonPhone");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonPhone>("AdventureWorks2008Model.FK_PersonPhone_PhoneNumberType_PhoneNumberTypeID", "PersonPhone", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
